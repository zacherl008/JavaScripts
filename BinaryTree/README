A binary tree programmed from scratch that implements an interface and extends an abstract class. Utilizes generics (E) and Comparable casting in order to accept most data types. Includes essential functions (using recursive calls) such as: contains, find, insert, clear, and size. A custom node class is used to set the variables and functions that are contained within each node of the tree.

Also includes tree visualization/printing functions such as getBreadth (width of tree), getMaxLevel(depth of tree), preOrder (printing in root, left right order), inOrder (left, root, right), postOrder (left, right, root), and printTree (prints the entire tree).
